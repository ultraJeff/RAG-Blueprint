# Default values for llama-stack.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

enabled: false
replicaCount: 1

image:
  repository: llamastack/distribution-remote-vllm
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "0.2.5"

imagePullSecrets: []
nameOverride: "llamastack"
fullnameOverride: "llamastack"

serviceAccount:
  # Specifies whether a service account should be created
  create: false


podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

strategy:
  type: Recreate

service:
  type: ClusterIP
  port: 8321

args:
  - --config
  - /app-config/config.yaml
env:
  - name: VLLM_MAX_TOKENS
    value: "4096"
  - name: VLLM_API_TOKEN
    value: fake
  - name: OTEL_ENDPOINT
    value: http://otel-collector-collector.observability-hub.svc.cluster.local:4318/v1/traces
  - name: POSTGRES_USER
    valueFrom:
      secretKeyRef:
        key: user
        name: pgvector
  - name: POSTGRES_PASSWORD
    valueFrom:
      secretKeyRef:
        key: password
        name: pgvector
  - name: POSTGRES_HOST
    valueFrom:
      secretKeyRef:
        key: host
        name: pgvector
  - name: POSTGRES_PORT
    valueFrom:
      secretKeyRef:
        key: port
        name: pgvector
  - name: PGVECTOR_DBNAME
    valueFrom:
      secretKeyRef:
        key: dbname
        name: pgvector



resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi


autoscaling:
  enabled: false

# Additional volumes on the output Deployment definition.
volumes:
  - configMap:
      defaultMode: 420
      name: run-config
    name: run-config-volume
  - name: dot-llama
    persistentVolumeClaim:
      claimName: llama-stack-data
  - emptyDir: {}
    name: cache

# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - mountPath: /app-config
    name: run-config-volume
  - mountPath: /.llama
    name: dot-llama
  - mountPath: /.cache
    name: cache
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

secrets:
  tavily-search:
    env: TAVILY_SEARCH_API_KEY
    value:

models:
  llama-3-2-3b-instruct:
    id: meta-llama/Llama-3.2-3B-Instruct
    enabled: false
    url: local-ns
  llama-guard-3-8b:
    id: meta-llama/Llama-Guard-3-8B
    enabled: false
    url: local-ns
    registerShield: true
  llama-3-2-1b-instruct:
    id: meta-llama/Llama-3.2-1B-Instruct
    enabled: false
    url: local-ns
  llama-3-1-8b-instruct:
    id: meta-llama/Llama-3.1-8B-Instruct
    enabled: false
    url: local-ns
  llama-guard-3-1b:
    id: meta-llama/Llama-Guard-3-1B
    enabled: false
    url: local-ns
    registerShield: true
  llama-3-3-70b-instruct:
    id: meta-llama/Llama-3.3-70B-Instruct
    enabled: false
    url: local-ns

mcp-servers:
  weather:
    enabled: true
    uri: http://mcp-servers-weather:8000/sse
  elasticsearch:
    enabled: true
    uri: http://supergateway-service:8000/sse
    
